/*
 * MainFrame.java
 *
 * Created on 20. April 2006, 08:36
 */

package jamschartfactory;

import jamschartfactory.data.*;
import jamschartfactory.gui.*;
import jamschartfactory.plot.JCFPlot;
import jamschartfactory.tableView.*;
import javax.swing.UIManager;

/**
 *
 * @author  c0krpe
 */
public class MainFrame extends javax.swing.JFrame {
    private JCFTreeView treeView;
    //String[] dataCols = null;
    //static double[][] dataMatrix = null;
    //static int[][] dateMatrix = null;
    static int seriesNo = 1;
    private J2KTimeSeriesObject tso = null;
    
    /** Creates new form MainFrame */
    public MainFrame() {
        this.setLocale(java.util.Locale.ENGLISH);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jToolBar1 = new javax.swing.JToolBar();
        addDataButton = new javax.swing.JButton();
        newPlotButton = new javax.swing.JButton();
        addPlotButton = new javax.swing.JButton();
        addSubPlotButton = new javax.swing.JButton();
        scatterPlotButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jMenu1.setText("Menu");
        jMenuItem1.setText("Item");
        jMenu1.add(jMenuItem1);

        jPopupMenu1.add(jMenu1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JAMS-Chart-Factory");
        jSplitPane1.setDividerSize(2);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 2));
        jSplitPane1.setLeftComponent(jScrollPane1);

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(640, 480));
        jSplitPane1.setRightComponent(jTabbedPane1);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        addDataButton.setText("+");
        addDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });

        jToolBar1.add(addDataButton);

        newPlotButton.setText("NP");
        newPlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPlotButtonActionPerformed(evt);
            }
        });

        jToolBar1.add(newPlotButton);

        addPlotButton.setText("AP");
        addPlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlotButtonActionPerformed(evt);
            }
        });

        jToolBar1.add(addPlotButton);

        addSubPlotButton.setText("SP");
        addSubPlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubPlotActionPerformed(evt);
            }
        });

        jToolBar1.add(addSubPlotButton);

        scatterPlotButton.setText("ScP");
        scatterPlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scatterPlotActionPerformed(evt);
            }
        });

        jToolBar1.add(scatterPlotButton);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        menuBar.setFont(new java.awt.Font("Arial", 0, 11));
        fileMenu.setText("Data");
        openMenuItem.setText("Add data");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(openMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");
        helpMenu.setFont(new java.awt.Font("Arial", 0, 11));
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scatterPlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scatterPlotActionPerformed
        int[] selRows = this.treeView.tree.getSelectionRows();
        int nSeries = selRows.length;
        javax.swing.tree.TreePath[] treeP = this.treeView.tree.getSelectionPaths();
        String[] title = new String[selRows.length];
        if(nSeries != 2){
            System.out.println("Two series have to be selected!");
            return;
        }
        for(int i = 0; i < nSeries; i++){
            selRows[i] = selRows[i] - 2;
            title[i] = tso.dataCols[i];//this.dataCols[i];//((javax.swing.tree.TreePath)treeP[i].getLastPathComponent()).toString();
            System.out.println("SelRows: "+selRows[i]);
        }
        this.newScatterPlot(title, selRows);
    }//GEN-LAST:event_scatterPlotActionPerformed

    private void addSubPlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubPlotActionPerformed
        int[] selRows = this.treeView.tree.getSelectionRows();
        javax.swing.tree.TreePath[] treeP = this.treeView.tree.getSelectionPaths();
        String[] title = new String[selRows.length];
        for(int i = 0; i < selRows.length; i++){
            selRows[i] = selRows[i] - 2;
            title[i] = tso.dataCols[i];//this.dataCols[i];//((javax.swing.tree.TreePath)treeP[i].getLastPathComponent()).toString();
            System.out.println("SelRows: "+selRows[i]);
        }
        TimeSeriesPlotDlg tspd = new TimeSeriesPlotDlg();
        tspd.setVisible(true);
        String type = tspd.plotType;
        this.addSubPlot(title, selRows, ((javax.swing.JPanel)this.jTabbedPane1.getSelectedComponent()), type);
    }//GEN-LAST:event_addSubPlotActionPerformed

    private void addPlotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlotButtonActionPerformed
        TimeSeriesPlotDlg tspd = new TimeSeriesPlotDlg();
        tspd.setVisible(true);
        String type = tspd.plotType;
        int[] selRows = this.treeView.tree.getSelectionRows();
        javax.swing.tree.TreePath[] treeP = this.treeView.tree.getSelectionPaths();
        String[] title = new String[selRows.length];
        for(int i = 0; i < selRows.length; i++){
            selRows[i] = selRows[i] - 2;
            title[i] = tso.dataCols[i];//this.dataCols[i];//((javax.swing.tree.TreePath)treeP[i].getLastPathComponent()).toString();
            System.out.println("SelRows: "+selRows[i]);
        }
        
        this.addPlot(title, selRows, ((javax.swing.JPanel)this.jTabbedPane1.getSelectedComponent()), type);
    }//GEN-LAST:event_addPlotButtonActionPerformed

    private void newPlotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPlotButtonActionPerformed
        int[] selRows = this.treeView.tree.getSelectionRows();
        javax.swing.tree.TreePath[] treeP = this.treeView.tree.getSelectionPaths();
        String[] title = new String[selRows.length];
        for(int i = 0; i < selRows.length; i++){
            selRows[i] = selRows[i] - 3;
            title[i] = tso.dataCols[i];//this.dataCols[i];//((javax.swing.tree.TreePath)treeP[i].getLastPathComponent()).toString();
        }
        this.newTSPlot(title, selRows);
        
        this.invalidate();
    }//GEN-LAST:event_newPlotButtonActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        this.tso = new J2KTimeSeriesObject();
        tso.CreateJ2KTimeSeriesObject();
        if(treeView == null)        
            treeView = new JCFTreeView(tso.fileName, tso.dataCols, this);
        else{
            treeView.addRootLeaf(treeView.getModel(), "new data", tso.dataCols);
            treeView.update(treeView.getGraphics());
        }
        jScrollPane1.setViewportView(treeView);
        
        String[] dataTypes = new String[tso.dataCols.length - 1];
        String[] dataCols = new String[tso.dataCols.length - 1];
        boolean[] editable = new boolean[tso.dataCols.length - 1];
        
        for(int i = 0; i < tso.dataCols.length - 1; i++){
            dataTypes[i] = "d";
            editable[i] = true;
            dataCols[i] = tso.dataCols[i+1];
        }
        SortableTable tableView = new SortableTable(dataCols, dataTypes, editable, tso.dataAsObject());
        this.jTabbedPane1.insertTab("TableView", null, tableView, "TableView", 0);
    }//GEN-LAST:event_openMenuItemActionPerformed
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                try{
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                }catch(Exception e){
                    System.out.println("error: " + e.getMessage());
                }
                new MainFrame().setVisible(true);
            }
        });
    }
    public void newScatterPlot (String[] title, int[] seriesNo){
        JCFPlot tsp = new JCFPlot();
        tsp.createNewScatterPlot(tso.dataMatrix, seriesNo, tso.nTsteps, tso.dataCols);
        javax.swing.JPanel np = new javax.swing.JPanel();
        np.setLayout(new java.awt.BorderLayout());
        np.add(tsp.cp, java.awt.BorderLayout.CENTER);
        String tabTitle = "";
        for(int i = 0; i < title.length; i++){
            tabTitle = tabTitle + tso.dataCols[seriesNo[i]+1] + " ";
        }
        this.jTabbedPane1.insertTab(tabTitle, null, np, "tip",this.jTabbedPane1.getTabCount());
        this.jTabbedPane1.setSelectedIndex(this.jTabbedPane1.getTabCount()-1);
    }
    
    public void newTSPlot (String[] title, int[] seriesNo){
        TimeSeriesPlotDlg tspd = new TimeSeriesPlotDlg();
        tspd.setVisible(true);
        JCFPlot tsp = new JCFPlot();
        String type = tspd.plotType;
        if(tspd.returnval){
            tsp.createNewTSPlot(tso.dateMatrix, tso.dataMatrix, seriesNo, tso.dataCols, type);
            
            javax.swing.JPanel np = new javax.swing.JPanel();
            np.setLayout(new java.awt.BorderLayout());
            np.add(tsp.cp, java.awt.BorderLayout.CENTER);
            
            String tabTitle = "";
            for(int i = 0; i < title.length; i++){
                tabTitle = tabTitle + tso.dataCols[seriesNo[i]+1] + " ";
            }
            this.jTabbedPane1.insertTab(tabTitle, null, np, "tip",this.jTabbedPane1.getTabCount());
            this.jTabbedPane1.setSelectedIndex(this.jTabbedPane1.getTabCount()-1);
        }
    }
    
    public void addPlot(String[] title, int[] seriesNo, javax.swing.JPanel panel, String type){
        JCFPlot tsp = new JCFPlot();
        tsp.addTSPlot(tso.dateMatrix, tso.dataMatrix, seriesNo, tso.dataCols, ((org.jfree.chart.ChartPanel)panel.getComponent(0)), type);
        panel.invalidate();
        panel.validate();
        panel.paint(panel.getGraphics());
        panel.repaint();
    }
    public void addSubPlot(String[] title, int[] seriesNo, javax.swing.JPanel panel, String type){
        JCFPlot tsp = new JCFPlot();
        tsp.addTSSubPlot(tso.dateMatrix, tso.dataMatrix, seriesNo, tso.dataCols, ((org.jfree.chart.ChartPanel)panel.getComponent(0)), type);
        panel.invalidate();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addDataButton;
    private javax.swing.JButton addPlotButton;
    private javax.swing.JButton addSubPlotButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton newPlotButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton scatterPlotButton;
    // End of variables declaration//GEN-END:variables
    
}
